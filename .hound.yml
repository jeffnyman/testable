AllCops:
  EnabledByDefault: true
  Exclude:
    - testable.gemspec
    - spec/**/*
    - examples/**/*

# For now, it is permissible to disable and enable Rubocop checks.
Style/DisableCopsWithinSourceCodeDirective:
  Enabled: false

# Do not require parentheses with methods that take arguments.
Style/MethodCallWithArgsParentheses:
  Enabled: false

# Do not enforce copyright messaging.
Style/Copyright:
  Enabled: false

# Removing need for frozen string literal comment.
Style/FrozenStringLiteralComment:
  Enabled: false

# Removing the preference for string single quotes.
Style/StringLiterals:
  Enabled: false

# Missing top-level module documentation comment.
Style/Documentation:
  Enabled: false

# Prefer reduce over inject.
Style/CollectionMethods:
  PreferredMethods:
    reduce: 'inject'

# Use each_with_object instead of inject.
Style/EachWithObject:
  Enabled: false

# Prefer fail over raise.
Style/SignalException:
  Enabled: false

# This never works for validations.
Layout/HashAlignment:
  EnforcedLastArgumentHashStyle: ignore_implicit

# Align multi-line params with previous line.
Layout/ParameterAlignment:
  EnforcedStyle: with_fixed_indentation

# Indent `when` clause one step from `case`.
Layout/CaseIndentation:
  IndentOneStep: true

# Don't force bad var names for reduce/inject loops.
Style/SingleLineBlockParams:
  Enabled: false

# For method chains, keep the dot with the method name.
Layout/DotPosition:
  EnforcedStyle: leading

# Stop nesting so hard.
Metrics/BlockNesting:
  Max: 2

# Encourage short methods.
Metrics/MethodLength:
  Max: 15

# Encourage short (as possible) modules.
Metrics/ModuleLength:
  Max: 105

# Encourage fewer parameters.
Metrics/ParameterLists:
  Max: 4

# Remove execute permissions check.
Lint/ScriptPermission:
  Enabled: false

# Not requiring fully qualified constants.
Lint/ConstantResolution:
  Enabled: false

# Do not require gem descriptions
Bundler/GemComment:
  Enabled: false

# Testable Exceptions

# Allow methods with has_ for predicates.
Naming/PredicateName:
  AllowedMethods:
    - has_correct_title?
    - has_correct_url?

# Sometimes this seems like a better way to do things.
Style/DoubleNegation:
  Enabled: false

# This is entirely for the addition of the match? method to String
# and that's only needed if you are using an outdated Ruby.
Style/MultilineIfModifier:
  Enabled: False
